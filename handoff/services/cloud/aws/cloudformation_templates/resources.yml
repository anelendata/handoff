AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ApplicationPrefix:
    Type: String
    Description: A prefix to restrict resource access from this role
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9_-]*"
    Default: handoff
  ResourceGroup:
    Type: String
    Description: A name to group the task belongs to
    MaxLength: 27
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9_-]*"
  Bucket:
    Type: String
    Description: The name of the bucket to store configs and artifacts
    MinLength: 3
    MaxLength: 63
    AllowedPattern: "[a-z0-9][a-z0-9-.]*"

  EnvVarPrefix:
    Type: String
    Description: Prefix for environment variables
    Default: HO_
    AllowedPattern: "[A-Z][A-Z0-9_]*"
  TaskName:
    Type: String
    Description: Container image builder task name
    Default: handoff-container-builder
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9_-]*"
  Image:
    Type: String
    Description: Container image location for container-builder task
    Default: "public.ecr.aws/m5u3u5p2/handoff-container-builder:0.1"
    # AllowedPattern: "[A-Z][A-Z0-9_]*"
  AllocatedCpu:
    Type: Number
    Default: 512
    Description: CPU units allocated to the task
  AllocatedMemory:
    Type: Number
    Default: 2048
    Description: Memory (in MB) allocated to the task

  LogRetentionDays:
    Type: Number
    Default: 365
    Description: Days before the log is deleted

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: 10.0.0.0/16

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: AWS::Region
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
  
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 1
        - !GetAZs 
          Ref: AWS::Region
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
        
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  GatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachement
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref PublicRouteTable

  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: !Sub ${AWS::StackName}
      GroupDescription: "A security group to allow ingress to app hosts"
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          Description: "allows to communicate to everywhere"
        - CidrIp: 0.0.0.0/0
          IpProtocol: udp
          FromPort: 0
          ToPort: 65535
          Description: "allows to communicate to everywhere"
#       SecurityGroupIngress:
#         - CidrIp: 0.0.0.0/0
#           Description: "allows ssh on 22 from everywhere"
#           FromPort: 22
#           IpProtocol: tcp
#           ToPort: 22
      VpcId: !Ref VPC
          
  FargateCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AWS::StackName}

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub ${ApplicationPrefix}/${ResourceGroup}/${TaskName}
      RetentionInDays: !Ref LogRetentionDays

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${ApplicationPrefix}-${ResourceGroup}-${TaskName}
      Cpu: !Sub ${AllocatedCpu}
      Memory: !Sub ${AllocatedMemory}
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue
        "Fn::Sub": "handoff-TaskExecutionRoleArn"
      TaskRoleArn: !ImportValue
        "Fn::Sub": "handoff-FargateDeployRoleArn"
      ContainerDefinitions:
        - Name: !Sub ${TaskName}
          Cpu: !Sub ${AllocatedCpu}
          Memory: !Sub ${AllocatedMemory}
          Image: !Sub ${Image}
          PortMappings:
            - ContainerPort: 22
              HostPort: 22
          Environment:
            - Name: !Sub ${EnvVarPrefix}RESOURCE_GROUP
              Value: !Sub ${ResourceGroup}
            - Name: !Sub ${EnvVarPrefix}BUCKET
              Value: !Sub ${Bucket}
            - Name: !Sub HO_CONTAINER_IMAGE
              Value: !Sub ${TaskName}
            - Name: !Sub ${EnvVarPrefix}TASK
              Value: !Sub ${TaskName}
            - Name: !Sub ${EnvVarPrefix}PROVIDER
              Value: aws
            - Name: !Sub ${EnvVarPrefix}PLATFORM
              Value: fargate
            - Name: AWS_REGION
              Value: !Ref AWS::Region
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Sub ${ApplicationPrefix}/${ResourceGroup}/${TaskName}
