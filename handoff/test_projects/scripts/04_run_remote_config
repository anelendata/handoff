#!/bin/bash
PROJECT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )/.."
source $PROJECT_DIR/scripts/funcs

if [ ! -d $PROJECT_DIR/03_exchange_rates ]; then
    echo The project does not exist...try running
    echo "    handoff quick_start start"
    echo in a new directory.
    exit 1
fi

cd $PROJECT_DIR

echo "
Welcome to module 04_run_remote_config!

We will continue using 03_exchange_rates example. But this time, we will
store the configurations to the remote data store.

Ready? (ctl-c to quit anytime)
"

Prompt

CheckAws

ChooseAwsProfile

echo "
Review how 03_exchange_rates project directory is structured:
"

echo 03_exchange_rates:
ListDir "03_exchange_rates" $DIM

Prompt

echo "
In the config directory, we have a couple of configuration files:
"
echo 03_exchange_rates/config:
ListDir "03_exchange_rates/config" $DIM

Prompt

echo "
...which look like:

tap-config.json:
"
Cat "03_exchange_rates/config/tap-config.json" $DIM
echo "

target-config.json:
"
Cat "03_exchange_rates/config/target-config.json" $DIM

echo "
Often times, such configuration files contain sensitive information.
So we push the configrations to a secure key store such as
AWS Systems Manager (SSM) Parameter Store (In SecuresString format)
handoff wraps this proces by a command so you can push everything inside
JSON files under config directory.

Try running:
"
Command "handoff -p 03_exchange_rates config push"

echo "
We also have some files needed for the task execution:
"
echo 03_exchange_rates/files:
ListDir "03_exchange_rates/files" $DIM

echo "
We need to store this somewhere accessible.
So we will create a cloud data storage (S3 bucket) for that.

Try running:
"
Command "handoff -p 03_exchange_rates provider create_bucket"

echo "
Wait for a minute and check here

https://s3.console.aws.amazon.com/s3

to make sure the bucket is created before you can proceed.
"

Prompt

echo "
Now it's time to push the files to the bucket.

Try running:
"
Command "handoff -p 03_exchange_rates files push"

BUCKET_URL=https://s3.console.aws.amazon.com/s3/buckets
BUCKET=`handoff -p 03_exchange_rates envs get -d '{"key":"HO_BUCKET"}' -l critical`
TASK=`handoff -p 03_exchange_rates envs get -d '{"key":"HO_TASK"}' -l critical`

echo "
Check

    $BUCKET_URL/$BUCKET/$TASK/last

to see the files directory is uploaded.
"

Prompt
rm -fr workspace
echo "
Install the workspace:
"
Command "handoff -p 03_exchange_rates -w workspace workspace install"

Prompt

echo "
Now let's run the command by pulling the configurations and files from remote. 

Try running:
"
Command "handoff -p 03_exchange_rates -w workspace run remote_config --push-artifacts"

Prompt

echo "
Notice that we used --push-artifacts option in

    $CMD

We pushed the result to the bucket:

    $BUCKET_URL/$BUCKET/$TASK/last/artifacts/

Also note that artifacts are automatically archived at each run at

    $BUCKET_URL/$BUCKET/$TASK/last/runs/
"

Prompt

echo Great. This concludes this section of the tutorial.

Prompt

Thanks

echo "
Next step is to prepare a Docker image and test running it locally.
"

Continue

$PROJECT_DIR/scripts/05_docker
