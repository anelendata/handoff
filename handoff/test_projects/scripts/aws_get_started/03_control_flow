#!/bin/bash
MODE=$1
if [[ -z $2 ]];then HEADTAIL_LIMIT=0; else HEADTAIL_LIMIT=$2;fi
cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )/../.."
source scripts/funcs

echo "## Control flow

The exchange rate application was a realistic application. It had a simple
linear workflow. handoff offers more advanced workflow logic.
"

Prompt "Ready? (Hit q at prompt to quit anytime. Any other key to proceed.)"

echo "### foreach

Sometimes, you want to run the same task with different configurations.
Once you produce a list of the configuration keys such as account ID for
some service, handoff can run for-each loop.

05_foreach project shows the structure of foreach control flow.
project.yml looks like:
"

Cat "05_foreach/project.yml" $DIM 0

Prompt

echo "
The first task generate_files writes out a list of IDs (1, 2, 3, 4, 5).
Then the second command \"foreach\" receive each ID stored in _line variable.
Under foreach definition, a sub-task is defined to do the process for each
input.

The second task, verify, verifies the number of output files generated by
the for-each loop.

Now let's run:
"

Command 'handoff run local -p 05_foreach -w workspace_05'

Prompt

echo "
You can verify that 5 output files are created:
"

Run "ls -l workspace_05/artifacts/out_*.txt" $DIM 0

Prompt

echo "### fork

Sometimes, you want to fork the pipeline. fork command can help you with it.

06_fork project shows an example of using fork as an extension to our previous
exchange rates project.

project.yml looks like:
"

Prompt

Cat "06_fork/project.yml" $DIM 0

Prompt

echo "
The difference from 04_install project is that there are two target-csv
running by forking the tap-exchangerates stdin. The first task of the fork
wide-format dumps CSV just like the previous example. It has the wide-format
with all the currencies listed as columns.

The second task long-format dumps CSV converts to a long format. The output
from the long-format task has date, symbol, and rates columns:

Let's verify. First install workpace:
"

Command 'handoff workspace install -p 06_fork -w workspace_06'

echo "
Now let's run:
"

Command 'handoff run local -p 06_fork -w workspace_06 -v start_date=$(date -I -d "-7 day")'

echo "
The long format file looks like this:
"

Run 'for f in `ls workspace_06/artifacts/exchange_rate_long_format*.csv`; do head -n 3 $f; done' $DIM 3

Prompt

Thanks

echo "
Now that we know how to develop and run the pipeline locally, we will gradually
start thinking about how to deploy this in the cloud *severlessly*.
We will learn how to save and fetch the configurations to the remote storage.
Before doing that, we will cover how to set up AWS account and profile in the
next section.
"

Continue scripts/aws_get_started/04_set_up_aws_account
